//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polycode.NostalgicPlayer.Agent.Decruncher.SharpCompressDecruncher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polycode.NostalgicPlayer.Agent.Decruncher.SharpCompressDecruncher.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///BZip2 can only compress a single file, but is normally used together with the tar archive format. It is developed by Julian Seward and maintained by Federico Mena..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///GZip can only compress a single file, but is normally used together with the tar archive format. It is developed by Jean-loup Gailly and Mark Adler as a free software replacement for the compress program used in early Unix systems..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT2 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///LZip can only compress a single file, but is normally used together with the tar archive format. LZip is a lossless data compressor with a user interface similar to the one of gzip or bzip2.
        ///
        ///The lzip file format is designed for data sharing and long-term archiving, taking into account both data integrity and decoder availability..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT3 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///Xz can only compress a single file, but is normally used together with the tar archive format.
        ///
        ///In most cases, xz achieves higher compression rates than alternatives like gzip and bzip2. Decompression speed is faster than bzip2, but slower than gzip. Compression can be much slower than gzip, and is slower than bzip2 for high levels of compression, and is most useful when a compressed file will be used many times..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT4 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///ZIP is an archive file format that supports lossless data compression. A ZIP file may contain one or more files or directories that may have been compressed. The ZIP file format permits a number of compression algorithms, though DEFLATE is the most common. This format was originally created in 1989 and was first implemented in PKWARE, Inc.&apos;s PKZIP utility, as a replacement for the previous ARC compression format by Thom Henderson. The ZIP f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT5 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///Tar is an archive format to store multiple files. The format itself does not make any compressing, just collect the files. It is normally used together with GZip or BZip2 to compress the tar file..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT6 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///7-Zip is developed by Igor Pavlov and was first released in 1999. 7-Zip uses its own 7z archive format. The core 7z compression uses a variety of algorithms, the most common of which are BZip2, PPMd, LZMA2, and LZMA. Developed by Pavlov, LZMA is a relatively new system, making its debut as part of the 7z format. LZMA uses an LZ-based sliding dictionary of up to 4 GB in size, backed by a range coder..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT7 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Created by Thomas Neumann.
        ///Uses SharpCompress by Adam Hathcock.
        ///
        ///RAR compression applications and libraries (including GUI based WinRAR application for Windows, console rar utility for different OSes and others) are proprietary software, to which Alexander L. Roshal, the elder brother of Eugene Roshal, owns the copyright. Version 3 of RAR is based on Lempel-Ziv (LZSS) and prediction by partial matching (PPM) compression, specifically the PPMd implementation of PPMII by Dmitry Shkarin..
        /// </summary>
        internal static string IDS_SCOM_DESCRIPTION_AGENT8 {
            get {
                return ResourceManager.GetString("IDS_SCOM_DESCRIPTION_AGENT8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find archive entry ({0})..
        /// </summary>
        internal static string IDS_SCOM_ERR_ENTRY_NOT_FOUND {
            get {
                return ResourceManager.GetString("IDS_SCOM_ERR_ENTRY_NOT_FOUND", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed while loading crunched data..
        /// </summary>
        internal static string IDS_SCOM_ERR_LOADING_DATA {
            get {
                return ResourceManager.GetString("IDS_SCOM_ERR_LOADING_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SharpCompress Decruncher.
        /// </summary>
        internal static string IDS_SCOM_NAME {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BZip2.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GZip.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT2 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LZip.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT3 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Xz.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT4 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Zip.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT5 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tar.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT6 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 7-Zip.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT7 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rar.
        /// </summary>
        internal static string IDS_SCOM_NAME_AGENT8 {
            get {
                return ResourceManager.GetString("IDS_SCOM_NAME_AGENT8", resourceCulture);
            }
        }
    }
}
