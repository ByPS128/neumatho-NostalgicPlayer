//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polycode.NostalgicPlayer.Agent.Decruncher.AncientDecruncher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polycode.NostalgicPlayer.Agent.Decruncher.AncientDecruncher.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Teemu Suutari (Ancient library).
        ///Converted to C# by Thomas Neumann.
        ///
        ///PowerPacker was written by Nico Francois and was very popular on the Amiga. One of its strength, is that it is very fast for both crunching and decrunching..
        /// </summary>
        internal static string IDS_ANC_DESCRIPTION_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_ANC_DESCRIPTION_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Teemu Suutari (Ancient library).
        ///Converted to C# by Thomas Neumann.
        ///
        ///The SQSH is a cruncher library for the XPK cruncher created by John Hendrikx. The algorithm is designed to crunch samples by using a delta compression algorithm together with LZ based compression..
        /// </summary>
        internal static string IDS_ANC_DESCRIPTION_AGENT2 {
            get {
                return ResourceManager.GetString("IDS_ANC_DESCRIPTION_AGENT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Teemu Suutari (Ancient library).
        ///Converted to C# by Thomas Neumann.
        ///
        ///The MMCMP packer is written by Zirconia a.k.a Emmanuel Giasson. The packer can detect different module formats (S3M/IT/XM/MOD), so it knows where the samples are stored. It then pack thoose with a special designed algorithm..
        /// </summary>
        internal static string IDS_ANC_DESCRIPTION_AGENT3 {
            get {
                return ResourceManager.GetString("IDS_ANC_DESCRIPTION_AGENT3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Teemu Suutari (Ancient library).
        ///Converted to C# by Thomas Neumann.
        ///
        ///The BZP2 is a cruncher library for the XPK cruncher and created by Oliver Roberts. This is from the official package description:
        ///
        ///Julian Sadler&apos;s bzip2 compresses files using the Burrows-Wheeler block sorting text compression algorithm, and Huffman coding. Compression is generally considerably better than that achieved by more conventional LZ77/LZ78-based compressors, and approaches the performance of the PPM family of sta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IDS_ANC_DESCRIPTION_AGENT4 {
            get {
                return ResourceManager.GetString("IDS_ANC_DESCRIPTION_AGENT4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Teemu Suutari (Ancient library).
        ///Converted to C# by Thomas Neumann.
        ///
        ///The BLZW is a cruncher library for the XPK cruncher. BLZW stands for &quot;Bryan&apos;s turbo-charged LZW&quot; and as the name says, it uses the LZW algorithm to pack the data..
        /// </summary>
        internal static string IDS_ANC_DESCRIPTION_AGENT5 {
            get {
                return ResourceManager.GetString("IDS_ANC_DESCRIPTION_AGENT5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Teemu Suutari (Ancient library).
        ///Converted to C# by Thomas Neumann.
        ///
        ///The RAKE is a cruncher library for the XPK cruncher created by Karsten Dageförde. This is from the official package description:
        ///
        ///RAKE implements a highly optimized form of the popular LZ77 compression algorithm. It uses static huffman coding for the &apos;len&apos; and a three-step coding for the &apos;offset&apos; information. The major feature of this packer is the highly optimized algorithm for tracking down redundant data..
        /// </summary>
        internal static string IDS_ANC_DESCRIPTION_AGENT6 {
            get {
                return ResourceManager.GetString("IDS_ANC_DESCRIPTION_AGENT6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Crunched data is corrupt.
        /// </summary>
        internal static string IDS_ANC_ERR_CORRUPT_DATA {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_CORRUPT_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encryption is not supported.
        /// </summary>
        internal static string IDS_ANC_ERR_NO_ENCRYPTION {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_NO_ENCRYPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ran out of crunched data.
        /// </summary>
        internal static string IDS_ANC_ERR_OUT_OF_DATA {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_OUT_OF_DATA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown chunk type.
        /// </summary>
        internal static string IDS_ANC_ERR_UNKNOWN_CHUNK_TYPE {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_UNKNOWN_CHUNK_TYPE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block data checksum mismatch.
        /// </summary>
        internal static string IDS_ANC_ERR_WRONG_BLOCK_CHECKSUM {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_WRONG_BLOCK_CHECKSUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chunk data checksum mismatch.
        /// </summary>
        internal static string IDS_ANC_ERR_WRONG_CHUNK_CHECKSUM {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_WRONG_CHUNK_CHECKSUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header checksum mismatch.
        /// </summary>
        internal static string IDS_ANC_ERR_WRONG_HEADER_CHECKSUM {
            get {
                return ResourceManager.GetString("IDS_ANC_ERR_WRONG_HEADER_CHECKSUM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ancient Decruncher.
        /// </summary>
        internal static string IDS_ANC_NAME {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PowerPacker.
        /// </summary>
        internal static string IDS_ANC_NAME_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPK (SQSH).
        /// </summary>
        internal static string IDS_ANC_NAME_AGENT2 {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME_AGENT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Music Module Compressor (MMCMP).
        /// </summary>
        internal static string IDS_ANC_NAME_AGENT3 {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME_AGENT3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPK (BZP2).
        /// </summary>
        internal static string IDS_ANC_NAME_AGENT4 {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME_AGENT4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPK (BLZW).
        /// </summary>
        internal static string IDS_ANC_NAME_AGENT5 {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME_AGENT5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XPK (RAKE).
        /// </summary>
        internal static string IDS_ANC_NAME_AGENT6 {
            get {
                return ResourceManager.GetString("IDS_ANC_NAME_AGENT6", resourceCulture);
            }
        }
    }
}
