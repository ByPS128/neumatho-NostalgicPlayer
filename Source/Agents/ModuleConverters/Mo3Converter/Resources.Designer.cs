//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polycode.NostalgicPlayer.Agent.ModuleConverter.Mo3Converter {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polycode.NostalgicPlayer.Agent.ModuleConverter.Mo3Converter.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the chunk information.
        /// </summary>
        internal static string IDS_ERR_LOADING_CHUNKS {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_CHUNKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module header.
        /// </summary>
        internal static string IDS_ERR_LOADING_HEADER {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the instrument information.
        /// </summary>
        internal static string IDS_ERR_LOADING_INSTRUMENTS {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_INSTRUMENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the pattern information.
        /// </summary>
        internal static string IDS_ERR_LOADING_PATTERN_INFO {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_PATTERN_INFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the plug-in information.
        /// </summary>
        internal static string IDS_ERR_LOADING_PLUGINS {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_PLUGINS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the sample information.
        /// </summary>
        internal static string IDS_ERR_LOADING_SAMPLEINFO {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_SAMPLEINFO", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read or decompress samples.
        /// </summary>
        internal static string IDS_ERR_LOADING_SAMPLES {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_SAMPLES", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the track information.
        /// </summary>
        internal static string IDS_ERR_LOADING_TRACKS {
            get {
                return ResourceManager.GetString("IDS_ERR_LOADING_TRACKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenMPT not supported at the moment.
        /// </summary>
        internal static string IDS_ERR_OPENMPT_NOT_SUPPORT {
            get {
                return ResourceManager.GetString("IDS_ERR_OPENMPT_NOT_SUPPORT", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to unpack music data.
        /// </summary>
        internal static string IDS_ERR_UNPACKING {
            get {
                return ResourceManager.GetString("IDS_ERR_UNPACKING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Written by Thomas Neumann.
        ///MO3 format is created by Ian Luck.
        ///
        ///The converter will convert a MO3 module into its origin format. The converter is mostly based on code from OpenMPT by Johannes Schultz and documentation by Laurent Clévys..
        /// </summary>
        internal static string IDS_MO3CONV_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_MO3CONV_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original format by Ian Luck.
        ///Converter created by Thomas Neumann mostly based on code from OpenMPT by Johannes Schultz and documentation by Laurent Clévys.
        ///
        ///MO3 is a file format encapsulating the features of several &quot;MOD&quot; formats (IT, XM, S3M, MTM, MOD, MPTM), but with one big difference: MP3 and OGG compressed samples. A lossless codec is also incorporated for any samples that don&apos;t like lossy encoding, and the whole file structure is compressed too.
        ///All of this makes it possible to have great reductio [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string IDS_MO3CONV_DESCRIPTION_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_MO3CONV_DESCRIPTION_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MO3 Converter.
        /// </summary>
        internal static string IDS_MO3CONV_NAME {
            get {
                return ResourceManager.GetString("IDS_MO3CONV_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MO3.
        /// </summary>
        internal static string IDS_MO3CONV_NAME_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_MO3CONV_NAME_AGENT1", resourceCulture);
            }
        }
    }
}
