//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Polycode.NostalgicPlayer.Agent.Player.HivelyTracker {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Polycode.NostalgicPlayer.Agent.Player.HivelyTracker.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original player by Bernhard Wodok.
        ///HivelyTracker parts by Xeron/IRIS.
        ///Converted to C# by Thomas Neumann + addional fixes by Bryc.
        ///
        ///This is a module format where the modules uses C64 like synth sounds. It come from the Amiga, where it was known as the THX format, but the programmers changed the name to AHX because of legal problems with George Lucas. AHX stands for Abyss&apos; Highest Experience..
        /// </summary>
        internal static string IDS_HVL_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_HVL_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original player by Bernhard Wodok.
        ///Converted to C# by Thomas Neumann + addional fixes by Bryc.
        ///
        ///This is a module format where the modules uses C64 like synth sounds. It come from the Amiga, where it was known as the THX format, but the programmers changed the name to AHX because of legal problems with George Lucas. AHX stands for Abyss&apos; Highest Experience.
        ///
        ///This player plays the 1.x file format..
        /// </summary>
        internal static string IDS_HVL_DESCRIPTION_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_HVL_DESCRIPTION_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original player by Bernhard Wodok.
        ///Converted to C# by Thomas Neumann + addional fixes by Bryc.
        ///
        ///This is a module format where the modules uses C64 like synth sounds. It come from the Amiga, where it was known as the THX format, but the programmers changed the name to AHX because of legal problems with George Lucas. AHX stands for Abyss&apos; Highest Experience.
        ///
        ///This player plays the 2.x file format, which has added filter support..
        /// </summary>
        internal static string IDS_HVL_DESCRIPTION_AGENT2 {
            get {
                return ResourceManager.GetString("IDS_HVL_DESCRIPTION_AGENT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Original player by Xeron/IRIS.
        ///Converted to C# by Thomas Neumann.
        ///
        ///HivelyTracker is based on the old AHX format from the Amiga, so it is possible to compose new modules in this format. However, it has extended the functionality and thereby introduced a new version of the AHX file format. Some of the new features includes more than 4 channels and ring modulation.
        ///.
        /// </summary>
        internal static string IDS_HVL_DESCRIPTION_AGENT3 {
            get {
                return ResourceManager.GetString("IDS_HVL_DESCRIPTION_AGENT3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Header has invalid values.
        /// </summary>
        internal static string IDS_HVL_ERR_CORRUPT_HEADER {
            get {
                return ResourceManager.GetString("IDS_HVL_ERR_CORRUPT_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module header.
        /// </summary>
        internal static string IDS_HVL_ERR_LOADING_HEADER {
            get {
                return ResourceManager.GetString("IDS_HVL_ERR_LOADING_HEADER", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module instruments.
        /// </summary>
        internal static string IDS_HVL_ERR_LOADING_INSTRUMENTS {
            get {
                return ResourceManager.GetString("IDS_HVL_ERR_LOADING_INSTRUMENTS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t read the module tracks.
        /// </summary>
        internal static string IDS_HVL_ERR_LOADING_TRACKS {
            get {
                return ResourceManager.GetString("IDS_HVL_ERR_LOADING_TRACKS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of positions:.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE0 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used tracks:.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE1 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Used instruments:.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE2 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playing position:.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE3 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Playing tracks:.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE4 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current speed:.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE5 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current tempo (Hz):.
        /// </summary>
        internal static string IDS_HVL_INFODESCLINE6 {
            get {
                return ResourceManager.GetString("IDS_HVL_INFODESCLINE6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HivelyTracker.
        /// </summary>
        internal static string IDS_HVL_NAME {
            get {
                return ResourceManager.GetString("IDS_HVL_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AHX 1.x.
        /// </summary>
        internal static string IDS_HVL_NAME_AGENT1 {
            get {
                return ResourceManager.GetString("IDS_HVL_NAME_AGENT1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AHX 2.x.
        /// </summary>
        internal static string IDS_HVL_NAME_AGENT2 {
            get {
                return ResourceManager.GetString("IDS_HVL_NAME_AGENT2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HivelyTracker.
        /// </summary>
        internal static string IDS_HVL_NAME_AGENT3 {
            get {
                return ResourceManager.GetString("IDS_HVL_NAME_AGENT3", resourceCulture);
            }
        }
    }
}
